#import sys, os, commands, platform, distutils.sysconfig, os.path, re, types
#check ZDP

inc_path = ['#', '#include', '#/../../include', '/usr/local/Cellar/boost/1.57.0/include/']
env = Environment(CPPPATH=inc_path)

if env["PLATFORM"]=="win32":
    cc_flags = """/O2 /Oi /GL 
        /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_USRDLL" /D "_WIN32_WINNT=0x0501" 
        /D "_CRT_SECURE_NO_WARNINGS" /D "UTINY_STATIC_LIB" /D "ZDP" /D "_MBCS" 
        /FD /EHsc /MT /Gy /W3 /nologo /c /Zi /errorReport:prompt"""
    ld_flags = '/LTCG'
elif env["PLATFORM"]=="darwin":
    cxx_flags = "-std=c++0x"
    cc_flags = """-D_REENTRANT -D__LINUX__ -DNODEBUG -DNDEBUG -DYY_NEVER_INTERACTIVE 
        -DZDP -DBZ_NO_STDIO -DHAVE_MEMMOVE -DSQLITE_ENABLE_MEMORY_MANAGEMENT
    -D__PLATFORM__ -O2 -fPIC -g -Wno-deprecated"""
    ld_flags = "-Wl -fPIC -O2 -g -L/usr/local/opt/bison/lib"
else:
    cxx_flags = "-std=c++17"
    cc_flags = """-D_REENTRANT -D__LINUX__ -DNODEBUG -DNDEBUG  
        -DZDP -DBZ_NO_STDIO -DHAVE_MEMMOVE -DSQLITE_ENABLE_MEMORY_MANAGEMENT
    -D__PLATFORM__ -O2 -fPIC -g -Wno-deprecated"""
    ld_flags = "-Wl,--hash-style=both -fPIC -O2 -g"
    cc_flags = '-O2 -g -DHAVE_MEMMOVE -DUSYS_HASNOT_LOG -DBZ_NO_STDIO -DNDEBUG -DOBJECT_MONITOR'
    tc = ''
    env['CC']='clang'
    env['CXX']='clang++'

env.Append(LINKFLAGS = ld_flags)
env.Append(CCFLAGS = cc_flags)
env.Append(CXXFLAGS = cxx_flags)
env['STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME']=1

Export('env')

objs = env.Object(Glob('src/*.c'))

liblua = env.StaticLibrary('liblua', objs, LIBS=[])
env.Install('#../../bin/x64/debian', liblua)
env.Alias('install', '#../../bin/x64/debian')
