// ***************************************************************
//  license_proto
//  ---------------------------------------------------------------
//  This file was generated by zgen, don't manually modify.
//  Yongming Wang(wangym@gmail.com)
//  Copyright (C) 2024 - All Rights Reserved
// *****************************************************************

#pragma once

#include "license.h"
#include <zce/zce_config.h>
#include <zce/zce_object.h>
#include <zce/zce_types.h>
#include <zce/zce_dblock.h>
#include <zce/zce_any.h>

namespace zlicense
{
    struct zds_context_t;
    struct name_value_t
    {
        static name_value_t _empty;

        bool operator==(const name_value_t& _t) const noexcept
        {
            if (name != _t.name) return false;
            if (value != _t.value) return false;
            return true;
        }

        zce_astring name;
        std::vector<zce_byte> value;
    };
    struct license_t
    {
        static license_t _empty;

        bool operator==(const license_t& _t) const noexcept
        {
            if (app != _t.app) return false;
            if (vecmac != _t.vecmac) return false;
            if (vechd != _t.vechd) return false;
            if (expire != _t.expire) return false;
            if (!(nv == _t.nv)) return false;
            return true;
        }

        zce_astring app;
        zce_astrvec    vecmac;
        zce_astrvec    vechd;
        zce_int32    expire;
        std::vector<name_value_t> nv;
    };
} //namespace zlicense
