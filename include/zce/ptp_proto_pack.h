// ***************************************************************
//  ptp_proto_pack   version:  1.0                         
//  ------------------------------------------------------------ 
//  This file was generated by vxgen.exe, don't manually modify.   
//  Hangzhou Zhidu Network Ltd.  (admin@zhidu.biz)               
//  Copyright (C) 2013-2016 - All Rights Reserved
// *************************************************************** 

#pragma once
#ifndef _ptp_proto_pack_h_
#define _ptp_proto_pack_h_

#include "ptp_proto.h"
#include <zce/zce_config.h>
#include <zce/zce_smartptr.h>
#include <zce/zce_types.h>

namespace zdp
{
    int zdp_pack(const ptp::chnl_actreq_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(ptp::chnl_actreq_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const ptp::chnl_actreq_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const ptp::chnl_actreq_t& _t, zce_byte version);
    int zdp_pack(const ptp::chnl_actack_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(ptp::chnl_actack_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const ptp::chnl_actack_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const ptp::chnl_actack_t& _t, zce_byte version);
    int zdp_pack(const ptp::strm_connreq_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(ptp::strm_connreq_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const ptp::strm_connreq_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const ptp::strm_connreq_t& _t, zce_byte version);
    int zdp_pack(const ptp::strm_connack_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(ptp::strm_connack_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const ptp::strm_connack_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const ptp::strm_connack_t& _t, zce_byte version);
    int zdp_pack(const ptp::task_testconn_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(ptp::task_testconn_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const ptp::task_testconn_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const ptp::task_testconn_t& _t, zce_byte version);
} //namespace ptp
#endif //_ptp_proto_pack_h_
