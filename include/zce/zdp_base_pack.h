// ***************************************************************
//  zdp_base_pack   version:  1.0                         
//  ------------------------------------------------------------ 
//  This file was generated by vxgen.exe, don't manually modify.   
//  Hangzhou Zhidu Network Ltd.  (admin@zhidu.biz)               
//  Copyright (C) 2013-2018 - All Rights Reserved
// *************************************************************** 

#pragma once
#ifndef _zdp_base_pack_h_
#define _zdp_base_pack_h_

#include "zce/zdp_base_proto.h"
#include <zce/zce_config.h>
#include <zce/zce_object.h>
#include <zce/zce_types.h>

namespace zdp
{
    int zdp_pack(const zdp_base::zdp_addr_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::zdp_addr_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::zdp_addr_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::zdp_addr_t& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_RESULT& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_RESULT& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_RESULT& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_RESULT& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_CHAR& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_CHAR& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_CHAR& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_CHAR& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_BYTE& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_BYTE& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_BYTE& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_BYTE& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_INT16& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_INT16& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_INT16& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_INT16& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_UINT16& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_UINT16& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_UINT16& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_UINT16& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_INT32& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_INT32& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_INT32& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_INT32& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_UINT32& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_UINT32& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_UINT32& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_UINT32& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_INT64& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_INT64& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_INT64& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_INT64& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_STRING254& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_STRING254& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_STRING254& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_STRING254& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_STRING& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_STRING& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_STRING& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_STRING& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_STRING_UTF8& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_STRING_UTF8& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_STRING_UTF8& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_STRING_UTF8& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_ANY& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_ANY& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_ANY& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_ANY& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_CONTINER& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_CONTINER& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_CONTINER& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_CONTINER& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_INT64VEC& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_INT64VEC& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_INT64VEC& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_INT64VEC& _t, zce_byte version);
    int zdp_pack(const zdp_base::nspair_t& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::nspair_t& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::nspair_t& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::nspair_t& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_NSPAIR& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_NSPAIR& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_NSPAIR& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_NSPAIR& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_NSPAIRS& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_NSPAIRS& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_NSPAIRS& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_NSPAIRS& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_NIPAIR& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_NIPAIR& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_NIPAIR& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_NIPAIR& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_NLLPAIR& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_NLLPAIR& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_NLLPAIR& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_NLLPAIR& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_SITEID& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_SITEID& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_SITEID& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_SITEID& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_NETADDR& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_NETADDR& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_NETADDR& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_NETADDR& _t, zce_byte version);
    int zdp_pack(const zdp_base::IE_INTVEC& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::IE_INTVEC& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::IE_INTVEC& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::IE_INTVEC& _t, zce_byte version);
    int zdp_pack(const zdp_base::MSG_NONE_REQ& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::MSG_NONE_REQ& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::MSG_NONE_REQ& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::MSG_NONE_REQ& _t, zce_byte version);
    int zdp_pack(const zdp_base::MSG_DISCONN_REQ& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::MSG_DISCONN_REQ& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::MSG_DISCONN_REQ& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::MSG_DISCONN_REQ& _t, zce_byte version);
    int zdp_pack(const zdp_base::MSG_CONTAINER_REQ& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::MSG_CONTAINER_REQ& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::MSG_CONTAINER_REQ& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::MSG_CONTAINER_REQ& _t, zce_byte version);
    int zdp_pack(const zdp_base::MSG_CONTAINER_RES& _t, zce_byte* buf, int size, zce_byte version);
    int zdp_unpack(zdp_base::MSG_CONTAINER_RES& _t, const zce_byte* buf, int size, zce_byte version);
    zce_int32 zdp_body_length(const zdp_base::MSG_CONTAINER_RES& _t, zce_byte version);
    zce_int32 zdp_total_length(const zdp_base::MSG_CONTAINER_RES& _t, zce_byte version);
} //namespace zdp_base
#endif //_zdp_base_pack_h_
