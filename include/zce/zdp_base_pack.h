// ***************************************************************
//  zdp_base_pack   version:  1.0                         
//  ------------------------------------------------------------ 
//  This file was generated by zdgen.exe, don't manually modify.   
//  Hangzhou Zhidu Network Ltd.  (admin@zhidu.biz)               
//  Copyright (C) 2013-2023 - All Rights Reserved
// *************************************************************** 

#pragma once
#ifndef _zdp_base_pack_h_
#define _zdp_base_pack_h_

#include "zce/zdp_base_proto.h"
#include "zce/zdp_base_pack.h"
#include <zce/zce_config.h>
#include <zce/zce_object.h>
#include <zce/zce_types.h>

namespace zdp
{
    struct zds_context_t;
    int zds_pack(zce_byte* buf, int size, const zdp_base::zdp_addr_t& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::zdp_addr_t& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::zdp_container_t& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::zdp_container_t& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::nspair_t& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::nspair_t& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::nipair_t& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::nipair_t& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::nllpair_t& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::nllpair_t& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::MSG_NONE_REQ& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::MSG_NONE_REQ& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::MSG_DISCONN_REQ& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::MSG_DISCONN_REQ& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::MSG_CONTAINER_REQ& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::MSG_CONTAINER_REQ& _t, const zce_byte* buf, int size, zds_context_t* ctx);
    int zds_pack(zce_byte* buf, int size, const zdp_base::MSG_CONTAINER_RES& _t, zds_context_t* ctx);
    int zds_unpack(zdp_base::MSG_CONTAINER_RES& _t, const zce_byte* buf, int size, zds_context_t* ctx);
} //namespace zdp_base
#endif //_zdp_base_pack_h_
